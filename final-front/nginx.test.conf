
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream spring_apps {
            # 각 애플리케이션 컨테이너 참조 (Docker 네트워크 내 서비스명 사용)
            server spring-app1:8080;
            server spring-app2:8080;
            server spring-app3:8080;
            server spring-app4:8080;
            server spring-app5:8080;
            server spring-app6:8080;
            server spring-app7:8080;
            server spring-app8:8080;
            server spring-app9:8080;
    }

    server {
    listen 8080;
    server_name localhost;

    # Vue 빌드 결과물 경로 (정확한 절대 경로로 수정)
    root /usr/share/nginx/html;
    index index.html;

    # 정적 에셋 처리
    location /assets/ {
        try_files $uri =404;
    }

    # API 프록시 - Spring 서버로 전달
    location /api/ {
        proxy_pass http://spring_apps;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 파비콘 처리
    location = /favicon.ico {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }

    # Vue 라우팅을 위한 설정 - 모든 나머지 요청을 index.html로 라우팅
    location / {
        try_files $uri $uri/ /index.html;
    }
}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
